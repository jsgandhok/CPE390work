1) subs r3, r0, #0

instantiates input value to r3. utilizng subs in order to verify if r0 is =0 or <0 (subs allows us to compare to 0)

2) mov r0, #1

r0 holds final result, 1 is moved to it

3) bxle lr

return r0 if (<0 || =0) 

4) mul r0, r3, r0

since r0 has the result, we are mult. it with r3 containing the desired factorial value

5) subs r3, r3, #1

decrement desired factorial value, in order for it to be compared to 0

6) bne .L2

compare r3 to 0, if != then loop repeats

7) bx lr

  * r3 has to =0
  * r0 contains k! 
  * returns r